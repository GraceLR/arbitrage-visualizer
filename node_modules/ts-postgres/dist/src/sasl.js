"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hi = exports.sha256 = exports.hmacSha256 = exports.xorBuffers = void 0;
const crypto_1 = require("crypto");
function xorBuffers(a, b) {
    if (a.length !== b.length) {
        throw new Error('Buffer length mismatch');
    }
    if (a.length === 0 || b.length === 0) {
        throw new Error('Buffers cannot be empty');
    }
    return Buffer.from(a.map((_, i) => a[i] ^ b[i]));
}
exports.xorBuffers = xorBuffers;
function hmacSha256(key, msg) {
    return crypto_1.createHmac('sha256', key).update(msg).digest();
}
exports.hmacSha256 = hmacSha256;
function sha256(key) {
    return crypto_1.createHash('sha256').update(key).digest();
}
exports.sha256 = sha256;
function hi(password, saltBytes, iterations) {
    let ui1 = hmacSha256(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]));
    let ui = ui1;
    for (let i = 0; i < iterations - 1; i++) {
        ui1 = hmacSha256(password, ui1);
        ui = xorBuffers(ui, ui1);
    }
    return ui;
}
exports.hi = hi;
//# sourceMappingURL=sasl.js.map